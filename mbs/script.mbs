' Script version
SCRIPT_VER=2
'Number channels
MAX_CHANNELS=2
' Set variable version script
setcommand(_VAR, 1, SCRIPT_VER)

' Motor controller configuration. Page numbers are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/272-roboteq-controllers-user-manual-v17/file

top:
	for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++

		' Send feedback for this channel at 25Hz.
		print("F", ch)
		' motor status flags [pag. 246]
		print("=", getvalue(_FM, ch))
		' motor command [pag. 250]
		print(":", getvalue(_MOTCMD, ch))
		' motor feedback [pag. 244]
		print(":", getvalue(_FEEDBK, ch))
		' motor loop error [pag. 244]
		print(":", getvalue(_LPERR, ch))
		' motor power [pag. 255]
		print(":", getvalue(_MOTPWR, ch))
		' power supply voltage
		print(":", getvalue(_VOLTS, 2))
		' motor Amps [pag. 230]
		print(":", getvalue(_MOTAMPS, ch))
		' motor battery amps [pag. 233]
		print(":", getvalue(_BATAMPS, ch))
		' position encoder value [pag. 241]
		print(":", getvalue(_ABCNTR, ch))
		' motor track [pag. 260]
		print(":", getvalue(_TR, ch))
		print("\r")
	next

	' Send status messages for the controller at 5Hz.
	c++
	if c = 5 then
		' Print status
		print("S")
		' Fault flag [pag. ---]
		print("=", getvalue(_FLTFLAG))
		' Status flag [pag. 247]
		print(":", getvalue(_STFLAG))
		' power supply voltage
		print(":", getvalue(_VOLTS, 1))
		print(":", getvalue(_VOLTS, 3))
		' temperature channels [pag. 259]
		print(":", getvalue(_TEMP, 1))
		print(":", getvalue(_TEMP, 2))
		print("\r")
		' Reset counter
		c = 0
	end if

	wait(19)
	goto top

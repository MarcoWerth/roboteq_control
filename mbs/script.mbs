' Copyright 2017, Raffaello Bonghi <raffaello@rnext.it>
' All rights reserved
' Redistribution and use in source and binary forms, with
' or without modification, are permitted provided that the 
' following conditions are met:
' 
' 1. Redistributions of source code must retain the above 
' copyright notice, this list of conditions and the following
' disclaimer.
' 2. Redistributions in binary form must reproduce the above
' copyright notice, this list of conditions and the following
' disclaimer in the documentation and/or other materials 
' provided with the distribution.
' 3. Neither the name of the copyright holder nor the names
' of its contributors may be used to endorse or promote products 
' derived from this software without specific prior written
' permission.
'
' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
' CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
' INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
' MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
' DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
' CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
' SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
' NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
' LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
' HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
' CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
' OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
' EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

' Script version
SCRIPT_VER=3
'Number channels
MAX_CHANNELS=1
' Set variable version script
setcommand(_VAR, 1, SCRIPT_VER)
' Set variable number channels
setcommand(_VAR, 2, MAX_CHANNELS)

' Motor controller configuration. Page numbers are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/272-roboteq-controllers-user-manual-v17/file

top:
	for ch = 1 andwhile ch <= getvalue(_VAR, 2) evaluate ch++

		' Send feedback for this channel at 25Hz.
		print("F", ch)
		' motor status flags [pag. 246]
		print("=", getvalue(_FM, ch))
		' motor command [pag. 250]
		print(":", getvalue(_MOTCMD, ch))
		' motor feedback [pag. 244]
		print(":", getvalue(_FEEDBK, ch))
		' motor loop error [pag. 244]
		print(":", getvalue(_LPERR, ch))
		' motor power [pag. 255]
		print(":", getvalue(_MOTPWR, ch))
		' power supply voltage
		print(":", getvalue(_VOLTS, 2))
		' motor Amps [pag. 230]
		print(":", getvalue(_MOTAMPS, ch))
		' motor battery amps [pag. 233]
		print(":", getvalue(_BATAMPS, ch))
		' position encoder value [pag. 241]
		print(":", getvalue(_ABCNTR, ch))
		' motor track [pag. 260]
		print(":", getvalue(_TR, ch))
		print("\r")
	next

	' Send status messages for the controller at 5Hz.
	c++
	if c = 5 then
		' Print status
		print("S")
		' Fault flag [pag. ---]
		print("=", getvalue(_FLTFLAG))
		' Status flag [pag. 247]
		print(":", getvalue(_STFLAG))
		' power supply voltage
		print(":", getvalue(_VOLTS, 1))
		print(":", getvalue(_VOLTS, 3))
		' temperature channels [pag. 259]
		print(":", getvalue(_TEMP, 1))
		print(":", getvalue(_TEMP, 2))
		print("\r")
		' Reset counter
		c = 0
	end if

	wait(19)
	goto top
